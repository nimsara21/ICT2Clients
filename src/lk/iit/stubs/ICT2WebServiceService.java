
package lk.iit.stubs;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "ICT2WebServiceService", targetNamespace = "http://ict2webapplicationtry.ict.iit.lk/", wsdlLocation = "http://nimz-vivo:8080/ICT2WebApplicationTry-1.0-SNAPSHOT/ICT2WebServiceService?WSDL")
public class ICT2WebServiceService
    extends Service
{

    private final static URL ICT2WEBSERVICESERVICE_WSDL_LOCATION;
    private final static WebServiceException ICT2WEBSERVICESERVICE_EXCEPTION;
    private final static QName ICT2WEBSERVICESERVICE_QNAME = new QName("http://ict2webapplicationtry.ict.iit.lk/", "ICT2WebServiceService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://nimz-vivo:8080/ICT2WebApplicationTry-1.0-SNAPSHOT/ICT2WebServiceService?WSDL");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        ICT2WEBSERVICESERVICE_WSDL_LOCATION = url;
        ICT2WEBSERVICESERVICE_EXCEPTION = e;
    }

    public ICT2WebServiceService() {
        super(__getWsdlLocation(), ICT2WEBSERVICESERVICE_QNAME);
    }

    public ICT2WebServiceService(WebServiceFeature... features) {
        super(__getWsdlLocation(), ICT2WEBSERVICESERVICE_QNAME, features);
    }

    public ICT2WebServiceService(URL wsdlLocation) {
        super(wsdlLocation, ICT2WEBSERVICESERVICE_QNAME);
    }

    public ICT2WebServiceService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, ICT2WEBSERVICESERVICE_QNAME, features);
    }

    public ICT2WebServiceService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public ICT2WebServiceService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns ICT2WebService
     */
    @WebEndpoint(name = "ICT2WebServicePort")
    public ICT2WebService getICT2WebServicePort() {
        return super.getPort(new QName("http://ict2webapplicationtry.ict.iit.lk/", "ICT2WebServicePort"), ICT2WebService.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ICT2WebService
     */
    @WebEndpoint(name = "ICT2WebServicePort")
    public ICT2WebService getICT2WebServicePort(WebServiceFeature... features) {
        return super.getPort(new QName("http://ict2webapplicationtry.ict.iit.lk/", "ICT2WebServicePort"), ICT2WebService.class, features);
    }

    private static URL __getWsdlLocation() {
        if (ICT2WEBSERVICESERVICE_EXCEPTION!= null) {
            throw ICT2WEBSERVICESERVICE_EXCEPTION;
        }
        return ICT2WEBSERVICESERVICE_WSDL_LOCATION;
    }

}
